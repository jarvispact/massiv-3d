declare const KEY: {
    readonly A: "a";
    readonly B: "b";
    readonly C: "c";
    readonly D: "d";
    readonly E: "e";
    readonly F: "f";
    readonly G: "g";
    readonly H: "h";
    readonly I: "i";
    readonly J: "j";
    readonly K: "k";
    readonly L: "l";
    readonly M: "m";
    readonly N: "n";
    readonly O: "o";
    readonly P: "p";
    readonly Q: "q";
    readonly R: "r";
    readonly S: "s";
    readonly T: "t";
    readonly U: "u";
    readonly V: "v";
    readonly W: "w";
    readonly X: "x";
    readonly Y: "y";
    readonly Z: "z";
    readonly NUM_0: "0";
    readonly NUM_1: "1";
    readonly NUM_2: "2";
    readonly NUM_3: "3";
    readonly NUM_4: "4";
    readonly NUM_5: "5";
    readonly NUM_6: "6";
    readonly NUM_7: "7";
    readonly NUM_8: "8";
    readonly NUM_9: "9";
    readonly SPACE: " ";
    readonly ARROW_UP: "ArrowUp";
    readonly ARROW_LEFT: "ArrowLeft";
    readonly ARROW_RIGHT: "ArrowRight";
    readonly ARROW_DOWN: "ArrowDown";
};
declare type Callback = (event: KeyboardEvent) => void;
export declare class KeyboardInput {
    private canvas;
    private keyDownMap;
    private keydownCallbacks;
    private keyupCallbacks;
    constructor(canvas: HTMLCanvasElement);
    static get KEY(): {
        readonly A: "a";
        readonly B: "b";
        readonly C: "c";
        readonly D: "d";
        readonly E: "e";
        readonly F: "f";
        readonly G: "g";
        readonly H: "h";
        readonly I: "i";
        readonly J: "j";
        readonly K: "k";
        readonly L: "l";
        readonly M: "m";
        readonly N: "n";
        readonly O: "o";
        readonly P: "p";
        readonly Q: "q";
        readonly R: "r";
        readonly S: "s";
        readonly T: "t";
        readonly U: "u";
        readonly V: "v";
        readonly W: "w";
        readonly X: "x";
        readonly Y: "y";
        readonly Z: "z";
        readonly NUM_0: "0";
        readonly NUM_1: "1";
        readonly NUM_2: "2";
        readonly NUM_3: "3";
        readonly NUM_4: "4";
        readonly NUM_5: "5";
        readonly NUM_6: "6";
        readonly NUM_7: "7";
        readonly NUM_8: "8";
        readonly NUM_9: "9";
        readonly SPACE: " ";
        readonly ARROW_UP: "ArrowUp";
        readonly ARROW_LEFT: "ArrowLeft";
        readonly ARROW_RIGHT: "ArrowRight";
        readonly ARROW_DOWN: "ArrowDown";
    };
    isKeyDown(key: keyof typeof KEY): boolean;
    onKeyUp(callback: Callback): this;
    onKeyDown(callback: Callback): this;
}
export {};
